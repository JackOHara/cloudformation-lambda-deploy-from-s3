AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation Lambda Deploy
Parameters: 
  BucketName: 
    Type: String
    Description: Bucket name

Resources:
  LambdaBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    DependsOn: LambdaInvokePermission
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: example-key/
            Function: !GetAtt [ ExampleFunction, Arn]

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    DependsOn: ExampleFunction
    Properties:
      FunctionName:
        Fn::GetAtt:
          - ExampleFunction
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Join [ "", [ "arn:aws:s3:::", !Ref BucketName] ]

  ExampleFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: nodejs12.x
      Role: !GetAtt 'LambdaReadWriteRole.Arn'
      Handler: index.handler
      Code:
        S3Bucket: !Ref BucketName
        S3Key: 'functions/ExampleFunction/function.zip'

  LambdaReadWriteRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Outputs:
  BucketName:
    Value: !Ref 'LambdaBucket'